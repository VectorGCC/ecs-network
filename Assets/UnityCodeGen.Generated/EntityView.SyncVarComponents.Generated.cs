// <auto-generated/>
using Mirror;
public abstract partial class EntityView : EntityViewBase
{
[SyncVar(hook = nameof(TyncComponentHook))] public TyncComponent TyncComponent;
public void TyncComponentHook(TyncComponent oldComponent, TyncComponent newComponent)
{
ApplyState();
}
[SyncVar(hook = nameof(SyncComponentHook))] public SyncComponent SyncComponent;
public void SyncComponentHook(SyncComponent oldComponent, SyncComponent newComponent)
{
ApplyState();
}
protected override T Read<T>() where T : struct
{
 if (TyncComponent is T component0)
return component0;
 if (SyncComponent is T component1)
return component1;
return default;
}
private void Update()
{
if (!NetworkServer.active)
return;
if (_entity.Version != _lastVersion)
{
_lastVersion = _entity.Version;
TyncComponent = _entity.Read<TyncComponent>();
SyncComponent = _entity.Read<SyncComponent>();
}
}
}
