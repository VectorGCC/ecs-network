using System;
using System.Linq;
using System.Text;
using UnityCodeGen;
using UnityEditor;

namespace SevenBoldPencil.EasyEvents.EcsDemo
{
    public class NetworkEventAttribute : Attribute
    {
    }

    [Generator]
    public class TestGenerator : ICodeGenerator
    {
        public void Execute(GeneratorContext context)
        {
            var sb = new StringBuilder();

            sb.AppendLine("// <auto-generated/>");
            sb.AppendLine("using Mirror;");
            sb.AppendLine("public static class NetworkEventExtensions {");

            var types = TypeCache.GetTypesWithAttribute<NetworkEventAttribute>();
            foreach (var type in types)
            {
                var code = @"public static void SendNetworkEvent(this IWorld world, " + type.FullName + @" @event){
                    NetworkClient.localPlayer.GetComponent<NetworkWorldPlayer>().CmdSendNetworkEvent(@event);
                }";
                sb.AppendLine(code);
            }

            sb.AppendLine("}");

            context.AddCode($"NetworkEventExtensions.Generated.cs", sb.ToString());
        }
    }
}